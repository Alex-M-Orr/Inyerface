[{"D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\index.tsx":"1","D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\reportWebVitals.ts":"2","D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\App.tsx":"3","D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\Components\\Login\\Login.tsx":"4","D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\Components\\Register\\Register.tsx":"5","D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\Components\\Profile\\Profile.tsx":"6","D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\Components\\Timer\\Timer.tsx":"7","D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\Views\\ProfilePage\\ProfilePage.tsx":"8","D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\Views\\LoginPage\\LoginPage.tsx":"9","D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\reducers\\Index.ts":"10","D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\reducers\\UserReducer.ts":"11"},{"size":567,"mtime":1607552769554,"results":"12","hashOfConfig":"13"},{"size":440,"mtime":1607529455953,"results":"14","hashOfConfig":"13"},{"size":1009,"mtime":1607553136095,"results":"15","hashOfConfig":"13"},{"size":913,"mtime":1607541429779,"results":"16","hashOfConfig":"13"},{"size":5792,"mtime":1607553147653,"results":"17","hashOfConfig":"13"},{"size":3928,"mtime":1607529975728,"results":"18","hashOfConfig":"13"},{"size":1229,"mtime":1607529975730,"results":"19","hashOfConfig":"13"},{"size":244,"mtime":1607531092446,"results":"20","hashOfConfig":"13"},{"size":298,"mtime":1607531025616,"results":"21","hashOfConfig":"13"},{"size":153,"mtime":1607552734976,"results":"22","hashOfConfig":"13"},{"size":468,"mtime":1607552886691,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"od99us",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\index.tsx",[],["53","54"],"D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\reportWebVitals.ts",[],"D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\App.tsx",["55","56","57","58","59","60"],"import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport { Register } from \"./Components/Register/Register\";\r\nimport { Timer } from \"./Components/Timer/Timer\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { ProfilePage } from \"./Views/ProfilePage/ProfilePage\";\r\nimport { LoginPage } from \"./Views/LoginPage/LoginPage\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from 'redux';\r\nimport { rootReducers } from './reducers/Index'\r\n\r\nconst store = createStore(rootReducers, +  (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/login\" component={LoginPage}></Route>\r\n            <Route path=\"/profile\" component={ProfilePage}></Route>\r\n          </Switch>\r\n        </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\Components\\Login\\Login.tsx",["61"],"import React, { useState} from 'react';\r\nimport './logincss.css';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport default function Login() {\r\n\r\n  const [enteredUsername, setUsername] = useState(\"\");\r\n  const [enteredPassword, setPassword] = useState(\"\");\r\n\r\n  const LoginHandler = async () => {\r\n    console.log(enteredUsername);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n        <div className=\"form-signin\">\r\n          <input className=\"form-control\" type=\"password\" id=\"password\" placeholder=\"Password\" \r\n          onChange={e => setPassword(e.target.value)} />\r\n          <input className=\"form-control\" id=\"username\" placeholder=\"Username\" \r\n          onChange={e => setUsername(e.target.value)} />\r\n          <div className=\"btndiv\">\r\n          <Button className=\"btn btn-lg btn-primary btn-block btnanim\" onClick={LoginHandler}>Login</Button>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\Components\\Register\\Register.tsx",["62","63","64","65","66","67","68","69"],"import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Collapse,\r\n  Button,\r\n  Label,\r\n  InputGroup,\r\n  Card,\r\n} from \"reactstrap\"; \r\nimport \"../../SCSS/register.scss\";\r\nimport { Timer } from \"../Timer/Timer\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nlet counter =0;\r\nlet mappedNums:any = [];\r\n\r\nexport const Register: React.FC<any> = (props: any) => {\r\n  const [formOpen, setFormOpen] = useState(false);\r\n  const [ toggleTimer, setToggleTimer ] = useState(false);\r\n  const [arrowDirection, setArrowDirection] = useState(180);\r\n  const [buttonRadius, setButtonRadius] = useState(15);\r\n  const [buttonTransition, setButtonTransition] = useState(.7);\r\n  const [subPos,setSubPos] = useState(0);\r\n  // const dispatch = useDispatch();\r\n\r\n\r\n  const registerFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    console.log(\"IN REGISTERFORMSUBMIT\");\r\n    \r\n    let email = event.currentTarget[\"emailKey\"].value + event.currentTarget[\"atSymbol\"].value + event.currentTarget[\"emailAddress\"].value;\r\n    let password = event.currentTarget[\"password\"].value;\r\n    let name = event.currentTarget[\"firstName\"].value + \" \" + event.currentTarget[\"lastName\"];\r\n    let weight = event.currentTarget[\"weight\"].value; \r\n    let phone = event.currentTarget[\"digit0\"].value + event.currentTarget[\"digit1\"].value + event.currentTarget[\"digit2\"].value + event.currentTarget[\"digit3\"].value +\r\n    event.currentTarget[\"digit4\"].value + event.currentTarget[\"digit5\"].value + event.currentTarget[\"digit6\"].value + event.currentTarget[\"digit7\"].value + event.currentTarget[\"digit8\"].value +\r\n    event.currentTarget[\"digit9\"].value;\r\n  \r\n    // const user: IUserState = {\r\n    //   email: email,\r\n    //   password: password,\r\n    //   name: name,\r\n    //   weight: weight,\r\n    //   phone: phone,\r\n    // }\r\n  \r\n    // dispatch(setUserState(user));\r\n    console.log(\"PAST DISPATCH\");  \r\n  }\r\n\r\n  const toggleForm = () => {\r\n    setToggleTimer(!toggleTimer);\r\n    setFormOpen(!formOpen);\r\n    changeArrowDirection();\r\n    changeButtonStyle();\r\n  }\r\n  const changeArrowDirection = () => {\r\n    if(formOpen){\r\n      setArrowDirection(180);\r\n    }\r\n    else{\r\n      setArrowDirection(90);\r\n    }    \r\n  }\r\n  const changeButtonStyle = () => {\r\n    if(formOpen){\r\n      setButtonTransition(.7);\r\n      setButtonRadius(10);\r\n    }\r\n    else{\r\n      setButtonTransition(.08);\r\n      setButtonRadius(0);\r\n    }\r\n  }\r\n  const moveSubmit = () => {\r\n    console.log(\"on mouse enter\")\r\n    switch (subPos) {\r\n      case 0:\r\n        setSubPos(-200);\r\n        break;\r\n      case -200:\r\n        setSubPos(200);\r\n        break;\r\n      case 200:\r\n        setSubPos(-200);\r\n        break;\r\n    }\r\n  }\r\n  \r\n  function shuffle(array:any) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n  \r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n  \r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n  \r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n  \r\n    return array;\r\n  }\r\n  const phoneNumberOption= (() => {\r\n    let nums = [0,1,2,3,4,5,6,7,8,9];\r\n    if(counter === 0){\r\n    for(let i = 0; i<10;i++){\r\n      nums = shuffle(nums);\r\n      mappedNums.push(<select name={`digit${i}`}>{nums.map((n) => <option value={n} >{n}</option>)}</select>);\r\n    }\r\n    counter++;\r\n  }\r\n  })();  \r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Collapse isOpen={formOpen} className=\"registerWrapper\">\r\n        <Form onSubmit={(event: React.FormEvent<HTMLFormElement>) => registerFormSubmit(event)} style={{marginBottom: \"50px\"}}>\r\n          <Label>Enter your email:</Label>\r\n          <br/>\r\n          <InputGroup>\r\n          <Input name=\"emailKey\" defaultValue=\"Email\" style={{ width: \"30%\" }}></Input>\r\n          <select name=\"atSymbol\"> \r\n            <option selected disabled hidden>Select the @ symbol</option>\r\n            <option value=\"WRONG\">!@</option>\r\n            <option value=\"WRONG\">.@</option>\r\n            <option value=\"WRONG\">@?</option>\r\n            <option value=\"@\"> @</option>\r\n            <option value=\"WRONG\">@`</option>\r\n          </select>\r\n          <Input name=\"emailAddress\" defaultValue=\"Website.com\" style={{ width: \"30%\"}}></Input>\r\n          </InputGroup>\r\n          <br/>\r\n          <Label name=\"password\" value=\"password\">Password:</Label>\r\n          <br/>\r\n          <Input name=\"password\"></Input>\r\n          <br/>\r\n          <Label>Enter first and last name:</Label>\r\n          <InputGroup>\r\n            <Input name=\"firstName\" type=\"text\" defaultValue=\"First Name\"></Input>\r\n            <Input name=\"lastName\" type=\"text\" defaultValue=\"Last Name\"></Input>\r\n          </InputGroup>\r\n\r\n          <Label name=\"weight\">Weight</Label>\r\n          <Input name=\"weight\"></Input>\r\n          <Label name=\"phone\">Phone Number</Label>\r\n          <InputGroup id=\"phoneNumbers\">\r\n          { mappedNums }\r\n          </InputGroup>\r\n          <input type=\"submit\" style={{transform: `translateX(${subPos}px)`}} value=\"Submit\" id=\"registerSubmit\" onMouseEnter={ moveSubmit }></input>\r\n        </Form>\r\n        { toggleTimer ? \r\n        <Timer seconds={Math.round(Math.random()*1000)} fontSize={100} triggeredFunction={toggleForm}/>\r\n        :\r\n        <span />\r\n        }\r\n      </Collapse>\r\n      <Button id=\"registerExpandButton\" style={{ borderRadius: `${buttonRadius}px ${buttonRadius}px 0 0`, transition:`${buttonTransition}s linear` }} onClick={toggleForm}>\r\n        <span className=\"arrow\" style={{transform: `rotate(${arrowDirection}deg)`}}></span>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\Components\\Profile\\Profile.tsx",["70","71","72","73","74","75","76","77","78","79","80"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport \"../../SCSS/profile.scss\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\n/**\r\n * Displays persons profile information\r\n * \r\n * @param props N/A\r\n */\r\nexport const ProfileComp: React.FC<IProps> = (props:IProps) => {\r\n\r\n    const [ maxImgWidth, setMaxImgWidth ] = useState(60);\r\n    const [ toggleName, setNameToggle ] = useState(false);\r\n    const [ toggleRotate, setPanelRotate ] = useState(\"rotate(90deg)\");\r\n    const [ showInfo, setShowInfo ] = useState(false);\r\n\r\n    const tempName = \"Dilly Gobbington\";\r\n    const tempBio = \"I\\'m a pretty cool guy to be frank. I don\\'t like to gloat \"+\r\n    \"normally, but honestly what choice do I have here? I\\'m tangibly, diagnosably \" +\r\n    \"perfect in every concievable way. I definitely undersold myself with my first \" +\r\n    \"sentence there. Not that I\\'m capable of making mistakes of course. I\\'m so \" +\r\n    \"fucking cool that one time, my dad walked out of the ... Actually, I\\'m too \" +\r\n    \"cool to finish that story. I know you\\'ll all agree if and when you are graced \" +\r\n    \"with my presence.\";\r\n\r\n    useEffect(()=>{\r\n        if(maxImgWidth < 10)\r\n        {\r\n            setMaxImgWidth(60);\r\n        }\r\n\r\n        if(showInfo)\r\n        {\r\n            \r\n        }\r\n    });\r\n\r\n    return(\r\n        <div className=\"prof-bg\">\r\n            <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                {/* Profile Image */}\r\n                <div className=\"col-2\">\r\n                    <div className=\"prof-img-container\" \r\n                    style={{transform: toggleRotate}}\r\n                    onMouseEnter={()=>setPanelRotate(\"rotate(0deg)\")}\r\n                    onMouseLeave={()=>setPanelRotate(\"rotate(90deg)\")}>\r\n                        { toggleName ? \r\n                        <p className=\"prof-name\" onMouseLeave={()=>setNameToggle(false)}\r\n                        style={{transform: \"rotate(180deg)\"}}>\r\n                            {tempName}</p> \r\n                        :\r\n                        <div className=\"black-box\"\r\n                        onMouseEnter={()=>setNameToggle(true)} />\r\n                        }\r\n                        <div className=\"row justify-content-center\">\r\n                        <img style={{maxWidth: maxImgWidth}} className=\"prof-img\"\r\n                        src=\"https://cdn.shopify.com/s/files/1/1635/2935/products/38336_large.jpg?v=1600837700\" \r\n                        alt=\"I'm not sure what this is\" \r\n                        onClick={()=>setMaxImgWidth(maxImgWidth-10)}/>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                {/* Profile Info */}\r\n                <div className=\"col-9\">\r\n                    <div className=\"prof-info-container\"\r\n                    onMouseEnter={()=>setShowInfo(true)}\r\n                    onMouseLeave={()=>setShowInfo(false)}>\r\n                        { showInfo ?\r\n                            <>\r\n                            {/* Name: <p style={{transform: letterPos}}>{tempName}</p> */}\r\n                            <h3 className=\"prof-text-header\">Name:</h3>\r\n                            <hr className=\"prof-hr\"/>\r\n                            <p className=\"text-wiggle\">{tempName}</p>\r\n                            <br/>\r\n                            {/* Bio: <p style={{transform: letterPos}}>{tempBio}</p> */}\r\n                            <h3 className=\"prof-text-header\">Bio:</h3>\r\n                            <hr className=\"prof-hr\"/>\r\n                            <p className=\"text-wiggle\">{tempBio}</p>\r\n                            </>\r\n                            :\r\n                            <span/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}","D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\Components\\Timer\\Timer.tsx",["81"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"../../SCSS/timer.scss\";\r\n\r\ninterface IProps {\r\n    seconds: number,\r\n    fontSize: number,\r\n    triggeredFunction?: Function,\r\n}\r\n\r\n/**\r\n * A component which simply displays a counter, counting down from a \r\n * given seconds value.\r\n * \r\n * @param props the seconds that the timer starts with, font size of \r\n * the time text, and the function that you want to execute once the \r\n * timer hits 0.\r\n */\r\nexport const Timer: React.FC<IProps> = (props:IProps) => {\r\n    \r\n    const [seconds, setSeconds] = useState(props.seconds);\r\n\r\n    //Triggers everytime the state changes\r\n    useEffect(() => {\r\n        if(seconds > 0 )\r\n        {\r\n            setTimeout(()=>setSeconds(seconds - 1), 1000);\r\n        }\r\n        else\r\n        {\r\n            reachedCountdown();\r\n        }\r\n    });\r\n\r\n    const reachedCountdown = () => {\r\n        if(props.triggeredFunction !== undefined)\r\n        {\r\n            props.triggeredFunction();\r\n        }\r\n        else\r\n        {\r\n            setSeconds(props.seconds);\r\n        }    \r\n    }\r\n\r\n    return(\r\n            <p id=\"time\" style={{fontSize: props.fontSize}} \r\n            key={Math.random()}>{ seconds }</p>\r\n    ); \r\n}",["82","83"],"D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\Views\\ProfilePage\\ProfilePage.tsx",[],"D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\Views\\LoginPage\\LoginPage.tsx",[],"D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\reducers\\Index.ts",[],"D:\\StagingProjects\\Inyerface2\\Inyerface\\src\\reducers\\UserReducer.ts",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":12},{"ruleId":"88","severity":1,"message":"92","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":18},{"ruleId":"88","severity":1,"message":"93","line":4,"column":10,"nodeType":"90","messageId":"91","endLine":4,"endColumn":15},{"ruleId":"88","severity":1,"message":"94","line":6,"column":50,"nodeType":"90","messageId":"91","endLine":6,"endColumn":54},{"ruleId":"88","severity":1,"message":"95","line":9,"column":10,"nodeType":"90","messageId":"91","endLine":9,"endColumn":18},{"ruleId":"88","severity":1,"message":"96","line":13,"column":7,"nodeType":"90","messageId":"91","endLine":13,"endColumn":12},{"ruleId":"88","severity":1,"message":"97","line":8,"column":10,"nodeType":"90","messageId":"91","endLine":8,"endColumn":25},{"ruleId":"88","severity":1,"message":"98","line":9,"column":3,"nodeType":"90","messageId":"91","endLine":9,"endColumn":7},{"ruleId":"88","severity":1,"message":"99","line":13,"column":10,"nodeType":"90","messageId":"91","endLine":13,"endColumn":21},{"ruleId":"88","severity":1,"message":"100","line":32,"column":9,"nodeType":"90","messageId":"91","endLine":32,"endColumn":14},{"ruleId":"88","severity":1,"message":"101","line":33,"column":9,"nodeType":"90","messageId":"91","endLine":33,"endColumn":17},{"ruleId":"88","severity":1,"message":"102","line":34,"column":9,"nodeType":"90","messageId":"91","endLine":34,"endColumn":13},{"ruleId":"88","severity":1,"message":"103","line":35,"column":9,"nodeType":"90","messageId":"91","endLine":35,"endColumn":15},{"ruleId":"88","severity":1,"message":"104","line":36,"column":9,"nodeType":"90","messageId":"91","endLine":36,"endColumn":14},{"ruleId":"88","severity":1,"message":"105","line":109,"column":9,"nodeType":"90","messageId":"91","endLine":109,"endColumn":26},{"ruleId":"88","severity":1,"message":"106","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":13},{"ruleId":"88","severity":1,"message":"107","line":2,"column":15,"nodeType":"90","messageId":"91","endLine":2,"endColumn":24},{"ruleId":"88","severity":1,"message":"108","line":2,"column":26,"nodeType":"90","messageId":"91","endLine":2,"endColumn":29},{"ruleId":"109","severity":1,"message":"110","line":22,"column":23,"nodeType":"111","messageId":"112","endLine":22,"endColumn":24,"suggestions":"113"},{"ruleId":"109","severity":1,"message":"110","line":22,"column":63,"nodeType":"111","messageId":"112","endLine":22,"endColumn":64,"suggestions":"114"},{"ruleId":"109","severity":1,"message":"110","line":23,"column":58,"nodeType":"111","messageId":"112","endLine":23,"endColumn":59,"suggestions":"115"},{"ruleId":"109","severity":1,"message":"110","line":25,"column":32,"nodeType":"111","messageId":"112","endLine":25,"endColumn":33,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"110","line":25,"column":75,"nodeType":"111","messageId":"112","endLine":25,"endColumn":76,"suggestions":"117"},{"ruleId":"109","severity":1,"message":"110","line":26,"column":74,"nodeType":"111","messageId":"112","endLine":26,"endColumn":75,"suggestions":"118"},{"ruleId":"109","severity":1,"message":"110","line":27,"column":43,"nodeType":"111","messageId":"112","endLine":27,"endColumn":44,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":30,"column":5,"nodeType":"90","endLine":30,"endColumn":14,"suggestions":"122"},{"ruleId":"88","severity":1,"message":"123","line":1,"column":28,"nodeType":"90","messageId":"91","endLine":1,"endColumn":34},{"ruleId":"84","replacedBy":"124"},{"ruleId":"86","replacedBy":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","'Timer' is defined but never used.","'Link' is defined but never used.","'Provider' is defined but never used.","'store' is assigned a value but never used.","'enteredPassword' is assigned a value but never used.","'Card' is defined but never used.","'useDispatch' is defined but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'name' is assigned a value but never used.","'weight' is assigned a value but never used.","'phone' is assigned a value but never used.","'phoneNumberOption' is assigned a value but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","no-useless-escape","Unnecessary escape character: \\'.","Literal","unnecessaryEscape",["128","129"],["130","131"],["132","133"],["134","135"],["136","137"],["138","139"],["140","141"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setMaxImgWidth'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [maxImgWidth, showInfo] as a second argument to the useEffect Hook.",["142"],"'useRef' is defined but never used.",["126"],["127"],"no-global-assign","no-unsafe-negation",{"messageId":"143","fix":"144","desc":"145"},{"messageId":"146","fix":"147","desc":"148"},{"messageId":"143","fix":"149","desc":"145"},{"messageId":"146","fix":"150","desc":"148"},{"messageId":"143","fix":"151","desc":"145"},{"messageId":"146","fix":"152","desc":"148"},{"messageId":"143","fix":"153","desc":"145"},{"messageId":"146","fix":"154","desc":"148"},{"messageId":"143","fix":"155","desc":"145"},{"messageId":"146","fix":"156","desc":"148"},{"messageId":"143","fix":"157","desc":"145"},{"messageId":"146","fix":"158","desc":"148"},{"messageId":"143","fix":"159","desc":"145"},{"messageId":"146","fix":"160","desc":"148"},{"desc":"161","fix":"162"},"removeEscape",{"range":"163","text":"164"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"165","text":"166"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"167","text":"164"},{"range":"168","text":"166"},{"range":"169","text":"164"},{"range":"170","text":"166"},{"range":"171","text":"164"},{"range":"172","text":"166"},{"range":"173","text":"164"},{"range":"174","text":"166"},{"range":"175","text":"164"},{"range":"176","text":"166"},{"range":"177","text":"164"},{"range":"178","text":"166"},"Add dependencies array: [maxImgWidth, showInfo]",{"range":"179","text":"180"},[627,628],"",[627,627],"\\",[667,668],[667,667],[746,747],[746,746],[896,897],[896,896],[939,940],[939,939],[1024,1025],[1024,1024],[1079,1080],[1079,1079],[1325,1325],", [maxImgWidth, showInfo]"]