[{"D:\\StagingProjects\\Inyerface2\\inyerface\\src\\index.tsx":"1","D:\\StagingProjects\\Inyerface2\\inyerface\\src\\reportWebVitals.ts":"2","D:\\StagingProjects\\Inyerface2\\inyerface\\src\\App.tsx":"3","D:\\StagingProjects\\Inyerface2\\inyerface\\src\\Components\\Register\\Register.tsx":"4","D:\\StagingProjects\\Inyerface2\\inyerface\\src\\Components\\Profile\\Profile.tsx":"5","D:\\StagingProjects\\Inyerface2\\inyerface\\src\\Components\\Timer\\Timer.tsx":"6"},{"size":500,"mtime":1607457833097,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":508,"mtime":1607459040206,"results":"10","hashOfConfig":"8"},{"size":1614,"mtime":1607457659811,"results":"11","hashOfConfig":"8"},{"size":783,"mtime":1607455627729,"results":"12","hashOfConfig":"8"},{"size":1257,"mtime":1607456785970,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"9ru1fe",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"D:\\StagingProjects\\Inyerface2\\inyerface\\src\\index.tsx",[],["30","31"],"D:\\StagingProjects\\Inyerface2\\inyerface\\src\\reportWebVitals.ts",[],"D:\\StagingProjects\\Inyerface2\\inyerface\\src\\App.tsx",["32"],"D:\\StagingProjects\\Inyerface2\\inyerface\\src\\Components\\Register\\Register.tsx",["33"],"import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Collapse,\r\n  Button,\r\n  Label,\r\n  InputGroup,\r\n  Card,\r\n} from \"reactstrap\"; \r\nimport \"../../SCSS/register.scss\";\r\n\r\nexport const Register: React.FC<any> = (props: any) => {\r\n  const [formOpen, setFormOpen] = useState(false);\r\n  const toggleForm = () => setFormOpen(!formOpen);\r\n  return (\r\n    <div>\r\n      <Button className=\"arrow down\" onClick={toggleForm}></Button>\r\n      <Collapse isOpen={formOpen}>\r\n        <Form>\r\n          <Label>Enter your email:</Label>\r\n          <Input name=\"emailKey\">Email</Input>\r\n          <select name=\"atSymbol\">\r\n            <option disabled>Select the @ symbol</option>\r\n            <option value=\"WRONG\">!@</option>\r\n            <option value=\"WRONG\">.@</option>\r\n            <option value=\"WRONG\">@?</option>\r\n            <option value=\"@\"> @</option>\r\n            <option value=\"WRONG\">@`</option>\r\n          </select>\r\n          <Input name=\"emailAddress\">website</Input>\r\n          <Label name=\"password\">Password:</Label>\r\n          <Input name=\"password\"></Input>\r\n\r\n          <InputGroup>\r\n            <Label>Enter first name:</Label>\r\n            <Input name=\"firstName\" type=\"text\"></Input>\r\n            <Label>Enter your last name:</Label>\r\n            <Input name=\"lastName\" type=\"text\"></Input>\r\n          </InputGroup>\r\n\r\n          <Label name=\"weight\">Weight</Label>\r\n          <Input name=\"weight\"></Input>\r\n          <Label name=\"phone\">Phone Number</Label>\r\n          <input type=\"number\" id=\"phoneNumber\" value=\"0\"></input>\r\n        </Form>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n","D:\\StagingProjects\\Inyerface2\\inyerface\\src\\Components\\Profile\\Profile.tsx",[],"D:\\StagingProjects\\Inyerface2\\inyerface\\src\\Components\\Timer\\Timer.tsx",["34"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"../../SCSS/timer.scss\";\r\n\r\ninterface IProps {\r\n    seconds: number,\r\n    fontSize: number,\r\n    triggeredFunction?: Function,\r\n}\r\n\r\n/**\r\n * A component which simply displays a counter, counting down from a \r\n * given seconds value.\r\n * \r\n * @param props the seconds that the timer starts with, font size of \r\n * the time text, and the function that you want to execute once the \r\n * timer hits 0.\r\n */\r\nexport const Timer: React.FC<IProps> = (props:IProps) => {\r\n    \r\n    const [seconds, setSeconds] = useState(props.seconds);\r\n\r\n    //Triggers everytime the state changes\r\n    useEffect(() => {\r\n        if(seconds > 0 )\r\n        {\r\n            setTimeout(()=>setSeconds(seconds - 1), 1000);\r\n        }\r\n        else\r\n        {\r\n            reachedCountdown();\r\n        }\r\n    });\r\n\r\n    const reachedCountdown = () => {\r\n        if(props.triggeredFunction !== undefined)\r\n        {\r\n            setSeconds(0);\r\n            props.triggeredFunction();\r\n        }\r\n        else\r\n        {\r\n            setSeconds(props.seconds);\r\n        }    \r\n    }\r\n\r\n    return(\r\n            <p id=\"time\" style={{fontSize: props.fontSize}} \r\n            key={Math.random()}>{ seconds }</p>\r\n    ); \r\n}",["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":12},{"ruleId":"41","severity":1,"message":"45","line":9,"column":3,"nodeType":"43","messageId":"44","endLine":9,"endColumn":7},{"ruleId":"41","severity":1,"message":"46","line":1,"column":28,"nodeType":"43","messageId":"44","endLine":1,"endColumn":34},{"ruleId":"37","replacedBy":"47"},{"ruleId":"39","replacedBy":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'useRef' is defined but never used.",["49"],["50"],"no-global-assign","no-unsafe-negation"]